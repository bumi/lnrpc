# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: stateservice.proto for package 'lnrpc'

require 'grpc'
require 'stateservice_pb'

module Lnrpc
  module State
    #
    # Comments in this file will be directly parsed into the API
    # Documentation as descriptions of the associated method, message, or field.
    # These descriptions should go right above the definition of the object, and
    # can be in either block or // comment format.
    #
    # An RPC method can be matched to an lncli command by placing a line in the
    # beginning of the description in exactly the following format:
    # lncli: `methodname`
    #
    # Failure to specify the exact name of the command will cause documentation
    # generation to fail.
    #
    # More information on how exactly the gRPC documentation is generated from
    # this proto file can be found here:
    # https://github.com/lightninglabs/lightning-api
    #
    # State service is a always running service that exposes the current state of
    # the wallet and RPC server.
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'lnrpc.State'

      # SubscribeState subscribes to the state of the wallet. The current wallet
      # state will always be delivered immediately.
      rpc :SubscribeState, ::Lnrpc::SubscribeStateRequest, stream(::Lnrpc::SubscribeStateResponse)
      # GetState returns the current wallet state without streaming further
      # changes.
      rpc :GetState, ::Lnrpc::GetStateRequest, ::Lnrpc::GetStateResponse
    end

    Stub = Service.rpc_stub_class
  end
end
